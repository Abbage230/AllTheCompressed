package com.Pdiddy973.allthecompressed.blocks;

import com.Pdiddy973.allthecompressed.AllTheCompressed;
import net.minecraft.block.AbstractBlock;
import net.minecraft.block.Block;
import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.block.material.MaterialColor;
import net.minecraftforge.common.ToolType;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

public class block {
    public static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, AllTheCompressed.MOD_ID);

    //Allthemodium Blocks
    public static final RegistryObject<Block> ALLTHEMODIUM_BLOCK_1X = BLOCKS.register("allthemodium_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALLTHEMODIUM_BLOCK_2X = BLOCKS.register("allthemodium_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALLTHEMODIUM_BLOCK_3X = BLOCKS.register("allthemodium_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALLTHEMODIUM_BLOCK_4X = BLOCKS.register("allthemodium_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALLTHEMODIUM_BLOCK_5X = BLOCKS.register("allthemodium_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALLTHEMODIUM_BLOCK_6X = BLOCKS.register("allthemodium_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALLTHEMODIUM_BLOCK_7X = BLOCKS.register("allthemodium_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALLTHEMODIUM_BLOCK_8X = BLOCKS.register("allthemodium_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALLTHEMODIUM_BLOCK_9X = BLOCKS.register("allthemodium_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Vibranium Blocks
    public static final RegistryObject<Block> VIBRANIUM_BLOCK_1X = BLOCKS.register("vibranium_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VIBRANIUM_BLOCK_2X = BLOCKS.register("vibranium_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VIBRANIUM_BLOCK_3X = BLOCKS.register("vibranium_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VIBRANIUM_BLOCK_4X = BLOCKS.register("vibranium_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VIBRANIUM_BLOCK_5X = BLOCKS.register("vibranium_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VIBRANIUM_BLOCK_6X = BLOCKS.register("vibranium_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VIBRANIUM_BLOCK_7X = BLOCKS.register("vibranium_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VIBRANIUM_BLOCK_8X = BLOCKS.register("vibranium_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VIBRANIUM_BLOCK_9X = BLOCKS.register("vibranium_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Unobtainium Blocks
    public static final RegistryObject<Block> UNOBTAINIUM_BLOCK_1X = BLOCKS.register("unobtainium_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UNOBTAINIUM_BLOCK_2X = BLOCKS.register("unobtainium_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UNOBTAINIUM_BLOCK_3X = BLOCKS.register("unobtainium_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UNOBTAINIUM_BLOCK_4X = BLOCKS.register("unobtainium_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UNOBTAINIUM_BLOCK_5X = BLOCKS.register("unobtainium_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UNOBTAINIUM_BLOCK_6X = BLOCKS.register("unobtainium_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UNOBTAINIUM_BLOCK_7X = BLOCKS.register("unobtainium_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UNOBTAINIUM_BLOCK_8X = BLOCKS.register("unobtainium_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UNOBTAINIUM_BLOCK_9X = BLOCKS.register("unobtainium_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    
    //VA_alloy Blocks
    public static final RegistryObject<Block> VA_ALLOY_BLOCK_1X = BLOCKS.register("va_alloy_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VA_ALLOY_BLOCK_2X = BLOCKS.register("va_alloy_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VA_ALLOY_BLOCK_3X = BLOCKS.register("va_alloy_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VA_ALLOY_BLOCK_4X = BLOCKS.register("va_alloy_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VA_ALLOY_BLOCK_5X = BLOCKS.register("va_alloy_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VA_ALLOY_BLOCK_6X = BLOCKS.register("va_alloy_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VA_ALLOY_BLOCK_7X = BLOCKS.register("va_alloy_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VA_ALLOY_BLOCK_8X = BLOCKS.register("va_alloy_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> VA_ALLOY_BLOCK_9X = BLOCKS.register("va_alloy_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
 
    //UA_alloy Blocks
    public static final RegistryObject<Block> UA_ALLOY_BLOCK_1X = BLOCKS.register("ua_alloy_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UA_ALLOY_BLOCK_2X = BLOCKS.register("ua_alloy_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UA_ALLOY_BLOCK_3X = BLOCKS.register("ua_alloy_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UA_ALLOY_BLOCK_4X = BLOCKS.register("ua_alloy_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UA_ALLOY_BLOCK_5X = BLOCKS.register("ua_alloy_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UA_ALLOY_BLOCK_6X = BLOCKS.register("ua_alloy_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UA_ALLOY_BLOCK_7X = BLOCKS.register("ua_alloy_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UA_ALLOY_BLOCK_8X = BLOCKS.register("ua_alloy_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UA_ALLOY_BLOCK_9X = BLOCKS.register("ua_alloy_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    
    //UV_alloy Blocks
    public static final RegistryObject<Block> UV_ALLOY_BLOCK_1X = BLOCKS.register("uv_alloy_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UV_ALLOY_BLOCK_2X = BLOCKS.register("uv_alloy_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UV_ALLOY_BLOCK_3X = BLOCKS.register("uv_alloy_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UV_ALLOY_BLOCK_4X = BLOCKS.register("uv_alloy_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UV_ALLOY_BLOCK_5X = BLOCKS.register("uv_alloy_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UV_ALLOY_BLOCK_6X = BLOCKS.register("uv_alloy_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UV_ALLOY_BLOCK_7X = BLOCKS.register("uv_alloy_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UV_ALLOY_BLOCK_8X = BLOCKS.register("uv_alloy_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> UV_ALLOY_BLOCK_9X = BLOCKS.register("uv_alloy_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Aluminum Blocks
    public static final RegistryObject<Block> ALUMINUM_BLOCK_1X = BLOCKS.register("aluminum_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALUMINUM_BLOCK_2X = BLOCKS.register("aluminum_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALUMINUM_BLOCK_3X = BLOCKS.register("aluminum_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALUMINUM_BLOCK_4X = BLOCKS.register("aluminum_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALUMINUM_BLOCK_5X = BLOCKS.register("aluminum_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALUMINUM_BLOCK_6X = BLOCKS.register("aluminum_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALUMINUM_BLOCK_7X = BLOCKS.register("aluminum_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALUMINUM_BLOCK_8X = BLOCKS.register("aluminum_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ALUMINUM_BLOCK_9X = BLOCKS.register("aluminum_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Copper Blocks
    public static final RegistryObject<Block> COPPER_BLOCK_1X = BLOCKS.register("copper_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COPPER_BLOCK_2X = BLOCKS.register("copper_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COPPER_BLOCK_3X = BLOCKS.register("copper_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COPPER_BLOCK_4X = BLOCKS.register("copper_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COPPER_BLOCK_5X = BLOCKS.register("copper_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COPPER_BLOCK_6X = BLOCKS.register("copper_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COPPER_BLOCK_7X = BLOCKS.register("copper_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COPPER_BLOCK_8X = BLOCKS.register("copper_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COPPER_BLOCK_9X = BLOCKS.register("copper_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Lead Blocks
    public static final RegistryObject<Block> LEAD_BLOCK_1X = BLOCKS.register("lead_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LEAD_BLOCK_2X = BLOCKS.register("lead_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LEAD_BLOCK_3X = BLOCKS.register("lead_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LEAD_BLOCK_4X = BLOCKS.register("lead_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LEAD_BLOCK_5X = BLOCKS.register("lead_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LEAD_BLOCK_6X = BLOCKS.register("lead_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LEAD_BLOCK_7X = BLOCKS.register("lead_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LEAD_BLOCK_8X = BLOCKS.register("lead_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> LEAD_BLOCK_9X = BLOCKS.register("lead_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Nickel Blocks
    public static final RegistryObject<Block> NICKEL_BLOCK_1X = BLOCKS.register("nickel_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NICKEL_BLOCK_2X = BLOCKS.register("nickel_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NICKEL_BLOCK_3X = BLOCKS.register("nickel_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NICKEL_BLOCK_4X = BLOCKS.register("nickel_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NICKEL_BLOCK_5X = BLOCKS.register("nickel_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NICKEL_BLOCK_6X = BLOCKS.register("nickel_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NICKEL_BLOCK_7X = BLOCKS.register("nickel_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NICKEL_BLOCK_8X = BLOCKS.register("nickel_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NICKEL_BLOCK_9X = BLOCKS.register("nickel_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Osmium Blocks
    public static final RegistryObject<Block> OSMIUM_BLOCK_1X = BLOCKS.register("osmium_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OSMIUM_BLOCK_2X = BLOCKS.register("osmium_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OSMIUM_BLOCK_3X = BLOCKS.register("osmium_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OSMIUM_BLOCK_4X = BLOCKS.register("osmium_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OSMIUM_BLOCK_5X = BLOCKS.register("osmium_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OSMIUM_BLOCK_6X = BLOCKS.register("osmium_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OSMIUM_BLOCK_7X = BLOCKS.register("osmium_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OSMIUM_BLOCK_8X = BLOCKS.register("osmium_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OSMIUM_BLOCK_9X = BLOCKS.register("osmium_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Platinum Blocks
    public static final RegistryObject<Block> PLATINUM_BLOCK_1X = BLOCKS.register("platinum_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> PLATINUM_BLOCK_2X = BLOCKS.register("platinum_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> PLATINUM_BLOCK_3X = BLOCKS.register("platinum_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> PLATINUM_BLOCK_4X = BLOCKS.register("platinum_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> PLATINUM_BLOCK_5X = BLOCKS.register("platinum_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> PLATINUM_BLOCK_6X = BLOCKS.register("platinum_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> PLATINUM_BLOCK_7X = BLOCKS.register("platinum_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> PLATINUM_BLOCK_8X = BLOCKS.register("platinum_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> PLATINUM_BLOCK_9X = BLOCKS.register("platinum_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Silver Blocks
    public static final RegistryObject<Block> SILVER_BLOCK_1X = BLOCKS.register("silver_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SILVER_BLOCK_2X = BLOCKS.register("silver_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SILVER_BLOCK_3X = BLOCKS.register("silver_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SILVER_BLOCK_4X = BLOCKS.register("silver_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SILVER_BLOCK_5X = BLOCKS.register("silver_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SILVER_BLOCK_6X = BLOCKS.register("silver_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SILVER_BLOCK_7X = BLOCKS.register("silver_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SILVER_BLOCK_8X = BLOCKS.register("silver_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SILVER_BLOCK_9X = BLOCKS.register("silver_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Tin Blocks
    public static final RegistryObject<Block> TIN_BLOCK_1X = BLOCKS.register("tin_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TIN_BLOCK_2X = BLOCKS.register("tin_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TIN_BLOCK_3X = BLOCKS.register("tin_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TIN_BLOCK_4X = BLOCKS.register("tin_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TIN_BLOCK_5X = BLOCKS.register("tin_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TIN_BLOCK_6X = BLOCKS.register("tin_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TIN_BLOCK_7X = BLOCKS.register("tin_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TIN_BLOCK_8X = BLOCKS.register("tin_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> TIN_BLOCK_9X = BLOCKS.register("tin_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Uranium Blocks
    public static final RegistryObject<Block> URANIUM_BLOCK_1X = BLOCKS.register("uranium_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> URANIUM_BLOCK_2X = BLOCKS.register("uranium_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> URANIUM_BLOCK_3X = BLOCKS.register("uranium_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> URANIUM_BLOCK_4X = BLOCKS.register("uranium_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> URANIUM_BLOCK_5X = BLOCKS.register("uranium_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> URANIUM_BLOCK_6X = BLOCKS.register("uranium_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> URANIUM_BLOCK_7X = BLOCKS.register("uranium_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> URANIUM_BLOCK_8X = BLOCKS.register("uranium_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> URANIUM_BLOCK_9X = BLOCKS.register("uranium_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Zinc Blocks
    public static final RegistryObject<Block> ZINC_BLOCK_1X = BLOCKS.register("zinc_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ZINC_BLOCK_2X = BLOCKS.register("zinc_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ZINC_BLOCK_3X = BLOCKS.register("zinc_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ZINC_BLOCK_4X = BLOCKS.register("zinc_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ZINC_BLOCK_5X = BLOCKS.register("zinc_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ZINC_BLOCK_6X = BLOCKS.register("zinc_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ZINC_BLOCK_7X = BLOCKS.register("zinc_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ZINC_BLOCK_8X = BLOCKS.register("zinc_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> ZINC_BLOCK_9X = BLOCKS.register("zinc_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Sand Blocks
    public static final RegistryObject<Block> SAND_BLOCK_1X = BLOCKS.register("sand_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SAND_BLOCK_2X = BLOCKS.register("sand_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SAND_BLOCK_3X = BLOCKS.register("sand_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SAND_BLOCK_4X = BLOCKS.register("sand_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SAND_BLOCK_5X = BLOCKS.register("sand_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SAND_BLOCK_6X = BLOCKS.register("sand_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SAND_BLOCK_7X = BLOCKS.register("sand_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SAND_BLOCK_8X = BLOCKS.register("sand_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> SAND_BLOCK_9X = BLOCKS.register("sand_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Glass Blocks
    public static final RegistryObject<Block> GLASS_BLOCK_1X = BLOCKS.register("glass_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLASS_BLOCK_2X = BLOCKS.register("glass_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLASS_BLOCK_3X = BLOCKS.register("glass_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLASS_BLOCK_4X = BLOCKS.register("glass_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLASS_BLOCK_5X = BLOCKS.register("glass_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLASS_BLOCK_6X = BLOCKS.register("glass_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLASS_BLOCK_7X = BLOCKS.register("glass_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLASS_BLOCK_8X = BLOCKS.register("glass_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLASS_BLOCK_9X = BLOCKS.register("glass_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Coal Blocks
    public static final RegistryObject<Block> COAL_BLOCK_1X = BLOCKS.register("coal_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_2X = BLOCKS.register("coal_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_3X = BLOCKS.register("coal_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_4X = BLOCKS.register("coal_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_5X = BLOCKS.register("coal_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_6X = BLOCKS.register("coal_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_7X = BLOCKS.register("coal_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_8X = BLOCKS.register("coal_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COAL_BLOCK_9X = BLOCKS.register("coal_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Iron Blocks
    public static final RegistryObject<Block> IRON_BLOCK_1X = BLOCKS.register("iron_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_2X = BLOCKS.register("iron_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_3X = BLOCKS.register("iron_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_4X = BLOCKS.register("iron_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_5X = BLOCKS.register("iron_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_6X = BLOCKS.register("iron_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_7X = BLOCKS.register("iron_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_8X = BLOCKS.register("iron_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> IRON_BLOCK_9X = BLOCKS.register("iron_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //redstone Blocks
    public static final RegistryObject<Block> REDSTONE_BLOCK_1X = BLOCKS.register("redstone_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> REDSTONE_BLOCK_2X = BLOCKS.register("redstone_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> REDSTONE_BLOCK_3X = BLOCKS.register("redstone_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> REDSTONE_BLOCK_4X = BLOCKS.register("redstone_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> REDSTONE_BLOCK_5X = BLOCKS.register("redstone_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> REDSTONE_BLOCK_6X = BLOCKS.register("redstone_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> REDSTONE_BLOCK_7X = BLOCKS.register("redstone_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> REDSTONE_BLOCK_8X = BLOCKS.register("redstone_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> REDSTONE_BLOCK_9X = BLOCKS.register("redstone_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Gold Blocks
    public static final RegistryObject<Block> GOLD_BLOCK_1X = BLOCKS.register("gold_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_2X = BLOCKS.register("gold_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_3X = BLOCKS.register("gold_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_4X = BLOCKS.register("gold_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_5X = BLOCKS.register("gold_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_6X = BLOCKS.register("gold_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_7X = BLOCKS.register("gold_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_8X = BLOCKS.register("gold_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GOLD_BLOCK_9X = BLOCKS.register("gold_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Diamond Blocks
    public static final RegistryObject<Block> DIAMOND_BLOCK_1X = BLOCKS.register("diamond_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIAMOND_BLOCK_2X = BLOCKS.register("diamond_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIAMOND_BLOCK_3X = BLOCKS.register("diamond_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIAMOND_BLOCK_4X = BLOCKS.register("diamond_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIAMOND_BLOCK_5X = BLOCKS.register("diamond_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIAMOND_BLOCK_6X = BLOCKS.register("diamond_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIAMOND_BLOCK_7X = BLOCKS.register("diamond_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIAMOND_BLOCK_8X = BLOCKS.register("diamond_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> DIAMOND_BLOCK_9X = BLOCKS.register("diamond_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Emerald Blocks
    public static final RegistryObject<Block> EMERALD_BLOCK_1X = BLOCKS.register("emerald_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> EMERALD_BLOCK_2X = BLOCKS.register("emerald_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> EMERALD_BLOCK_3X = BLOCKS.register("emerald_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> EMERALD_BLOCK_4X = BLOCKS.register("emerald_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> EMERALD_BLOCK_5X = BLOCKS.register("emerald_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> EMERALD_BLOCK_6X = BLOCKS.register("emerald_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> EMERALD_BLOCK_7X = BLOCKS.register("emerald_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> EMERALD_BLOCK_8X = BLOCKS.register("emerald_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> EMERALD_BLOCK_9X = BLOCKS.register("emerald_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Netherite Blocks
    public static final RegistryObject<Block> NETHERITE_BLOCK_1X = BLOCKS.register("netherite_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERITE_BLOCK_2X = BLOCKS.register("netherite_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERITE_BLOCK_3X = BLOCKS.register("netherite_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERITE_BLOCK_4X = BLOCKS.register("netherite_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERITE_BLOCK_5X = BLOCKS.register("netherite_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERITE_BLOCK_6X = BLOCKS.register("netherite_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERITE_BLOCK_7X = BLOCKS.register("netherite_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERITE_BLOCK_8X = BLOCKS.register("netherite_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> NETHERITE_BLOCK_9X = BLOCKS.register("netherite_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //quartz Blocks
    public static final RegistryObject<Block> QUARTZ_BLOCK_1X = BLOCKS.register("quartz_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> QUARTZ_BLOCK_2X = BLOCKS.register("quartz_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> QUARTZ_BLOCK_3X = BLOCKS.register("quartz_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> QUARTZ_BLOCK_4X = BLOCKS.register("quartz_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> QUARTZ_BLOCK_5X = BLOCKS.register("quartz_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> QUARTZ_BLOCK_6X = BLOCKS.register("quartz_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> QUARTZ_BLOCK_7X = BLOCKS.register("quartz_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> QUARTZ_BLOCK_8X = BLOCKS.register("quartz_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> QUARTZ_BLOCK_9X = BLOCKS.register("quartz_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Honey Blocks
    public static final RegistryObject<Block> HONEY_BLOCK_1X = BLOCKS.register("honey_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> HONEY_BLOCK_2X = BLOCKS.register("honey_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> HONEY_BLOCK_3X = BLOCKS.register("honey_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> HONEY_BLOCK_4X = BLOCKS.register("honey_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> HONEY_BLOCK_5X = BLOCKS.register("honey_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> HONEY_BLOCK_6X = BLOCKS.register("honey_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> HONEY_BLOCK_7X = BLOCKS.register("honey_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> HONEY_BLOCK_8X = BLOCKS.register("honey_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> HONEY_BLOCK_9X = BLOCKS.register("honey_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Cobblestone Blocks
    public static final RegistryObject<Block> COBBLESTONE_BLOCK_1X = BLOCKS.register("cobblestone_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_BLOCK_2X = BLOCKS.register("cobblestone_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_BLOCK_3X = BLOCKS.register("cobblestone_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_BLOCK_4X = BLOCKS.register("cobblestone_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_BLOCK_5X = BLOCKS.register("cobblestone_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_BLOCK_6X = BLOCKS.register("cobblestone_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_BLOCK_7X = BLOCKS.register("cobblestone_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_BLOCK_8X = BLOCKS.register("cobblestone_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> COBBLESTONE_BLOCK_9X = BLOCKS.register("cobblestone_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));

    //Stone Blocks
    public static final RegistryObject<Block> STONE_BLOCK_1X = BLOCKS.register("stone_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BLOCK_2X = BLOCKS.register("stone_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BLOCK_3X = BLOCKS.register("stone_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BLOCK_4X = BLOCKS.register("stone_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BLOCK_5X = BLOCKS.register("stone_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BLOCK_6X = BLOCKS.register("stone_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BLOCK_7X = BLOCKS.register("stone_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BLOCK_8X = BLOCKS.register("stone_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> STONE_BLOCK_9X = BLOCKS.register("stone_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.STONE).requiresCorrectToolForDrops()));

    //Glowstone Blocks
    public static final RegistryObject<Block> GLOWSTONE_BLOCK_1X = BLOCKS.register("glowstone_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLOWSTONE_BLOCK_2X = BLOCKS.register("glowstone_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLOWSTONE_BLOCK_3X = BLOCKS.register("glowstone_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLOWSTONE_BLOCK_4X = BLOCKS.register("glowstone_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLOWSTONE_BLOCK_5X = BLOCKS.register("glowstone_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLOWSTONE_BLOCK_6X = BLOCKS.register("glowstone_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLOWSTONE_BLOCK_7X = BLOCKS.register("glowstone_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLOWSTONE_BLOCK_8X = BLOCKS.register("glowstone_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> GLOWSTONE_BLOCK_9X = BLOCKS.register("glowstone_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

    //Obsidian Blocks
    public static final RegistryObject<Block> OBSIDIAN_BLOCK_1X = BLOCKS.register("obsidian_block_1x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OBSIDIAN_BLOCK_2X = BLOCKS.register("obsidian_block_2x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OBSIDIAN_BLOCK_3X = BLOCKS.register("obsidian_block_3x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OBSIDIAN_BLOCK_4X = BLOCKS.register("obsidian_block_4x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OBSIDIAN_BLOCK_5X = BLOCKS.register("obsidian_block_5x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OBSIDIAN_BLOCK_6X = BLOCKS.register("obsidian_block_6x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OBSIDIAN_BLOCK_7X = BLOCKS.register("obsidian_block_7x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OBSIDIAN_BLOCK_8X = BLOCKS.register("obsidian_block_8x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> OBSIDIAN_BLOCK_9X = BLOCKS.register("obsidian_block_9x", () -> new Block(AbstractBlock.Properties.of(Material.METAL, MaterialColor.METAL).strength(15f, 30f).harvestTool(ToolType.PICKAXE).harvestLevel(2).sound(SoundType.METAL).requiresCorrectToolForDrops()));

}
